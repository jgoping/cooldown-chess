{"version":3,"sources":["pages/Match/index.tsx","pages/Home/utils.js","pages/Home/HomeCard.ts","pages/Home/HomeCardActions.ts","pages/Home/HomeCardContent.ts","pages/Home/logo.ts","pages/Home/logo.png","pages/Home/Option.ts","pages/Home/OptionFormControl.ts","pages/Home/index.tsx","pages/Match/HomeButton.tsx","pages/Match/MatchModal.ts","pages/Match/ModalContent.ts","pages/Match/ModalFooter.ts","pages/Match/GameOverModal.tsx","pages/Match/PlayableBoard.tsx","pages/Match/RoomLink.ts","pages/Match/WaitingModal.tsx","pages/Match/SpectatorModal.tsx","pages/Match/StartingModal.tsx","pages/Match/ColouredText.ts","App.tsx","index.tsx"],"names":["ModalTypes","getValue","event","target","value","HomeCard","styled","Card","minWidth","HomeCardActions","CardActions","justifyContent","HomeCardContent","CardContent","display","flexDirection","alignItems","Logo","img","props","src","Option","div","OptionFormControl","FormControl","width","withRouter","React","useState","numPlayers","setNumPlayers","cooldown","setCooldown","onClick","a","params","axios","get","process","roomId","data","history","push","logoSrc","Typography","variant","component","InputLabel","id","Select","labelId","onChange","label","MenuItem","Button","MatchModal","Modal","ModalContent","withTheme","theme","palette","background","paper","shadows","spacing","ModalFooter","GameOverModal","winner","newGameCallback","winnerText","open","Fade","in","PlayableBoard","socket","player","position","allowDrag","pieceColour","piece","onDrop","sourceSquare","targetSquare","emit","orientation","RoomLink","TextField","WaitingModal","defaultValue","InputProps","readOnly","SpectatorModal","dismissCallback","StartingModal","countdown","ColouredText","p","colour","Match","setSocket","setPlayer","setWinner","setPosition","None","modalType","setModalType","useParams","playerTimer","setPlayerTimer","opponentTimer","setOpponentTimer","setCountdown","useEffect","serverEndpoint","socketIOClient","transports","on","bothConnected","Waiting","Spectator","updateTimer","disconnect","Starting","GameOver","time","length","App","className","exact","path","Home","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0de7c22.chunk.js","sourcesContent":["import Button from '@material-ui/core/Button';\r\nimport socketIOClient, { Socket } from \"socket.io-client\";\r\nimport React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport GameOverModal from './GameOverModal';\r\nimport PlayableBoard from './PlayableBoard';\r\nimport WaitingModal from './WaitingModal';\r\nimport SpectatorModal from \"./SpectatorModal\";\r\nimport StartingModal from \"./StartingModal\";\r\nimport ColouredText from './ColouredText';\r\n\r\ninterface ParamTypes {\r\n  roomId: string;\r\n}\r\n\r\nenum ModalTypes {\r\n  None,\r\n  Waiting,\r\n  Starting,\r\n  GameOver,\r\n  Spectator\r\n};\r\n\r\nconst Match = () => {\r\n  const [socket, setSocket] = React.useState<Socket | undefined>();\r\n  const [player, setPlayer] = React.useState('');\r\n  const [winner, setWinner] = React.useState('');\r\n  const [position, setPosition] = React.useState('');\r\n  const [modalType, setModalType] = React.useState(ModalTypes.None);\r\n  const { roomId } = useParams<ParamTypes>();\r\n  const [playerTimer, setPlayerTimer] = React.useState(0);\r\n  const [opponentTimer, setOpponentTimer] = React.useState(0);\r\n  const [countdown, setCountdown] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    const serverEndpoint = process.env.REACT_APP_SERVER_ENDPOINT ?? '';\r\n    const socket = socketIOClient(serverEndpoint, {transports: ['websocket']});\r\n    setSocket(socket);\r\n\r\n    socket.emit('Room', roomId);\r\n\r\n    socket.on('Player', data => {\r\n      if (!data.bothConnected) {\r\n        setModalType(ModalTypes.Waiting);\r\n      }\r\n      setPlayer(data.colour);\r\n    });\r\n\r\n    socket.on('Spectator', () => {\r\n      setModalType(ModalTypes.Spectator);\r\n\r\n      socket.on('Time', data => {\r\n        updateTimer(data);\r\n      });\r\n    });\r\n\r\n    socket.on('Board', data => {\r\n      setPosition(data);\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    socket?.on('Begin', data => {\r\n      setCountdown(data);\r\n      if (player) {\r\n        data > 0 ? setModalType(ModalTypes.Starting) : setModalType(ModalTypes.None);\r\n      }\r\n    });\r\n\r\n    socket?.on('GameOver', data => {\r\n      if (player) {\r\n        setModalType(ModalTypes.GameOver);\r\n      }\r\n      setWinner(data);\r\n    });\r\n\r\n    socket?.on('Time', data => {\r\n      updateTimer(data);\r\n    });\r\n  }, [player])\r\n\r\n  \r\n  const updateTimer = ({ colour, time }: { colour: string, time: number}) => {\r\n    const side = player.length > 0 ? player : 'w';\r\n    side === colour ? setPlayerTimer(time) : setOpponentTimer(time);\r\n  };\r\n\r\n  const newGameCallback = () => {\r\n    socket?.emit('NewGame');\r\n  };\r\n\r\n  const dismissCallback = () => {\r\n    setModalType(ModalTypes.None);\r\n  };\r\n\r\n  const onSurrender = () => {\r\n    socket?.emit('Surrender');\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <p>\r\n        Cooldown Chess\r\n      </p>\r\n      {modalType === ModalTypes.Waiting && (\r\n        <WaitingModal roomId={roomId} />\r\n      )}\r\n      {modalType === ModalTypes.Starting && (\r\n        <StartingModal countdown={countdown} />\r\n      )}\r\n      {modalType === ModalTypes.GameOver && (\r\n        <GameOverModal winner={winner} newGameCallback={newGameCallback} />\r\n      )}\r\n      {modalType === ModalTypes.Spectator && (\r\n        <SpectatorModal dismissCallback={dismissCallback} />\r\n      )}\r\n\r\n      <div>Opponent's cooldown: <ColouredText colour={!opponentTimer ? 'green' : 'red'}>{opponentTimer}</ColouredText></div>\r\n      <PlayableBoard socket={socket} player={player} position={position} />\r\n      <div>Your cooldown: <ColouredText colour={!playerTimer ? 'green' : 'red'}>{playerTimer}</ColouredText></div>\r\n      <Button variant=\"contained\" onClick={onSurrender}>Surrender</Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Match;\r\n","export const getValue = (event) => {\r\n  return event.target.value;\r\n};\r\n","import Card from '@material-ui/core/Card';\r\nimport styled from 'styled-components';\r\n\r\nconst HomeCard = styled(Card)({\r\n  minWidth: 400,\r\n});\r\n\r\nexport default HomeCard;\r\n","import CardActions from '@material-ui/core/CardActions';\r\nimport styled from 'styled-components';\r\n\r\nconst HomeCardActions = styled(CardActions)({\r\n  justifyContent: 'center'\r\n});\r\n\r\nexport default HomeCardActions;","import CardContent from '@material-ui/core/CardContent';\r\nimport styled from 'styled-components';\r\n\r\nconst HomeCardContent = styled(CardContent)({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n});\r\n\r\nexport default HomeCardContent;\r\n","import styled from 'styled-components';\r\n\r\ninterface props {\r\n  src: string;\r\n};\r\n\r\nconst Logo = styled.img<props>`\r\n  src: ${props => props.src};\r\n  height: 400px;\r\n  width: 400px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport default Logo;\r\n","export default __webpack_public_path__ + \"static/media/logo.5cabee29.png\";","import styled from 'styled-components';\r\n\r\nconst Option = styled.div`\r\n  margin-bottom: 12px;\r\n`;\r\n\r\nexport default Option;\r\n","import FormControl from \"@material-ui/core/FormControl\";\r\nimport styled from 'styled-components';\r\n\r\nconst OptionFormControl = styled(FormControl)({\r\n  width: 400\r\n});\r\n\r\nexport default OptionFormControl;\r\n","import axios from 'axios';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { getValue } from './utils';\r\nimport HomeCard from './HomeCard';\r\nimport HomeCardActions from './HomeCardActions';\r\nimport HomeCardContent from './HomeCardContent';\r\nimport Logo from './logo';\r\nimport logoSrc from './logo.png';\r\nimport Option from './Option';\r\nimport OptionFormControl from './OptionFormControl';\r\n\r\ninterface CreateRoomResponse {\r\n  roomId: string;\r\n};\r\n\r\nexport const Home = (props: any) => {\r\n  const [numPlayers, setNumPlayers] = React.useState(1);\r\n  const [cooldown, setCooldown] = React.useState(5);\r\n\r\n  const handleNumPlayersChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setNumPlayers(getValue(event));\r\n  };\r\n\r\n  const handleCooldownChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setCooldown(getValue(event));\r\n  };\r\n\r\n  const onClick = async () => {\r\n    const params = {\r\n      numPlayers,\r\n      cooldown\r\n    };\r\n\r\n    const { data: { roomId } } = await axios.get<CreateRoomResponse>(`${process.env.REACT_APP_SERVER_ENDPOINT}/create-room`, { params });\r\n    props.history.push(`/match/${roomId}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Cooldown Chess</h1>\r\n      <Logo src={logoSrc}/>\r\n\r\n      <HomeCard>\r\n        <HomeCardContent>\r\n          <Option>\r\n            <Typography variant=\"body1\" component=\"p\">Choose what opponent you will play:</Typography>\r\n            <OptionFormControl variant=\"filled\">\r\n              <InputLabel id=\"demo-simple-select-filled-label\">\r\n                Opponent\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-filled-label\"\r\n                id=\"demo-simple-select-filled\"\r\n                value={numPlayers}\r\n                onChange={handleNumPlayersChange}\r\n                label=\"Opponent\"\r\n              >\r\n                <MenuItem value={1}>Bot</MenuItem>\r\n                <MenuItem value={2}>Human</MenuItem>\r\n              </Select>\r\n            </OptionFormControl>\r\n          </Option>\r\n\r\n          <Option>\r\n            <Typography variant=\"body1\" component=\"p\">Choose how many seconds to wait between moves:</Typography>\r\n            <OptionFormControl variant=\"filled\">\r\n              <InputLabel id=\"demo-simple-select-filled-label\">\r\n                Cooldown\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-filled-label\"\r\n                id=\"demo-simple-select-filled\"\r\n                value={cooldown}\r\n                onChange={handleCooldownChange}\r\n                label=\"Cooldown\"\r\n              >\r\n                <MenuItem value={1}>1</MenuItem>\r\n                <MenuItem value={3}>3</MenuItem>\r\n                <MenuItem value={5}>5</MenuItem>\r\n                <MenuItem value={10}>10</MenuItem>\r\n              </Select>\r\n            </OptionFormControl>\r\n          </Option>\r\n        </HomeCardContent>\r\n        <HomeCardActions>\r\n          <Button variant=\"contained\" onClick={onClick}>Create Room</Button>\r\n        </HomeCardActions>\r\n      </HomeCard>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default withRouter(Home);\r\n","import Button from '@material-ui/core/Button';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\n\r\nconst HomeButton: React.FC<RouteComponentProps> = ({ history }) => {\r\n  const onClick = async () => {\r\n    history.push(`/`);\r\n  };\r\n\r\n  return (\r\n    <Button variant=\"contained\" onClick={onClick}>Return to Home Screen</Button>\r\n  );\r\n};\r\n\r\nexport default withRouter(HomeButton);\r\n","import Modal from '@material-ui/core/Modal';\r\nimport styled from 'styled-components';\r\n\r\nconst MatchModal = styled(Modal)({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n});\r\n\r\nexport default MatchModal;\r\n","import styled from 'styled-components';\r\nimport { withTheme } from '@material-ui/core/styles';\r\n\r\nconst ModalContent = withTheme(styled.div`\r\n  background: ${props => props.theme.palette.background.paper};\r\n  border: '2px solid #000';\r\n  boxShadow: ${props => props.theme.shadows[5]};\r\n  padding: ${props => props.theme.spacing(2, 4, 3)};\r\n`);\r\n\r\nexport default ModalContent;\r\n","import styled from 'styled-components';\r\n\r\nconst ModalFooter = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport default ModalFooter;\r\n","import Button from '@material-ui/core/Button';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport React from 'react';\r\n\r\nimport HomeButton from './HomeButton';\r\nimport Modal from './MatchModal';\r\nimport ModalContent from './ModalContent';\r\nimport ModalFooter from './ModalFooter';\r\n\r\ninterface GameOverModalProps {\r\n  winner: string;\r\n  newGameCallback: () => void;\r\n};\r\n\r\nconst GameOverModal: React.FC<GameOverModalProps> = ({ winner, newGameCallback }) => {\r\n  const winnerText = winner === 'w' ? 'White' : 'Black';\r\n\r\n  return (\r\n    <Modal\r\n      open={true}\r\n    >\r\n      <Fade in={true}>\r\n        <ModalContent>\r\n          <div>Game Over! {winnerText} wins!</div>\r\n          <ModalFooter>\r\n            <Button variant=\"contained\" onClick={newGameCallback}>Rematch</Button>\r\n            <HomeButton />\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Fade>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default GameOverModal;\r\n","import Chessboard, { Piece } from 'chessboardjsx';\r\nimport React from 'react';\r\nimport { Socket } from \"socket.io-client\";\r\n\r\ninterface PlayableBoardProps {\r\n  socket?: Socket;\r\n  player: string;\r\n  position: string;\r\n}\r\n\r\nconst PlayableBoard: React.FC<PlayableBoardProps> = ({ socket, player, position }) => {\r\n  const allowDrag = ({ piece }: { piece: Piece }) => {\r\n    const pieceColour = piece[0];\r\n    return player === pieceColour;\r\n  };\r\n\r\n  const onDrop = ({sourceSquare, targetSquare, piece}: { sourceSquare: string; targetSquare: string; piece: string }): void => {\r\n    const pieceColour = piece[0];\r\n    if (player === pieceColour) {\r\n      socket?.emit('Move', {sourceSquare, targetSquare});\r\n    }\r\n  };\r\n\r\n  return (\r\n  <>\r\n    <Chessboard \r\n      width={500}\r\n      position={position}\r\n      allowDrag={(allowDrag)}\r\n      onDrop={onDrop}\r\n      orientation={player !== 'b' ? 'white' : 'black'}\r\n    />\r\n  </>\r\n  );\r\n};\r\n\r\nexport default PlayableBoard;\r\n","import styled from 'styled-components';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst RoomLink = styled(TextField)({\r\n  width: 460,\r\n});\r\n\r\nexport default RoomLink;\r\n","import Fade from '@material-ui/core/Fade';\r\nimport React from 'react';\r\n\r\nimport HomeButton from './HomeButton';\r\nimport Modal from './MatchModal';\r\nimport ModalContent from './ModalContent';\r\nimport ModalFooter from './ModalFooter';\r\nimport RoomLink from './RoomLink';\r\n\r\ninterface WaitingModalProps {\r\n  roomId: string;\r\n};\r\n\r\nconst WaitingModal: React.FC<WaitingModalProps> = ({ roomId }) => {\r\n  return (\r\n    <Modal\r\n      open={true}\r\n    >\r\n      <Fade in={true}>\r\n        <ModalContent>\r\n          <div>Send this link to your opponent:</div>\r\n          <RoomLink\r\n            id=\"standard-basic\"\r\n            label=\"Room ID\"\r\n            variant=\"filled\"\r\n            defaultValue={`${process.env.REACT_APP_CLIENT_ENDPOINT}/#/match/${roomId}`}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n          />\r\n          <div>Waiting for opponent to join...</div>\r\n\r\n          <ModalFooter>\r\n            <HomeButton />\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Fade>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default WaitingModal;\r\n","import Button from '@material-ui/core/Button';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport React from 'react';\r\n\r\nimport HomeButton from './HomeButton';\r\nimport Modal from './MatchModal';\r\nimport ModalContent from './ModalContent';\r\nimport ModalFooter from './ModalFooter';\r\n\r\ninterface SpectatorModalProps {\r\n  dismissCallback: () => void;\r\n};\r\n\r\nconst SpectatorModal: React.FC<SpectatorModalProps> = ({ dismissCallback }) => {\r\n  return (\r\n    <Modal\r\n      open={true}\r\n    >\r\n      <Fade in={true}>\r\n        <ModalContent>\r\n          <div>You have joined in spectator mode as two players have already joined this room.</div>\r\n          <ModalFooter>\r\n            <Button variant=\"contained\" onClick={dismissCallback}>Spectate</Button>\r\n            <HomeButton />\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Fade>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default SpectatorModal;\r\n","import Fade from '@material-ui/core/Fade';\r\nimport React from 'react';\r\n\r\nimport Modal from './MatchModal';\r\nimport ModalContent from './ModalContent';\r\n\r\ninterface StartingModalProps {\r\n  countdown: number;\r\n};\r\n\r\nconst StartingModal: React.FC<StartingModalProps> = ({ countdown }) => {\r\n  return (\r\n    <Modal\r\n      open={true}\r\n    >\r\n      <Fade in={true}>\r\n        <ModalContent>\r\n          <div>Both players joined!</div>\r\n          <div>Starting game in {countdown} seconds...</div>\r\n        </ModalContent>\r\n      </Fade>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default StartingModal;\r\n","import styled from 'styled-components';\r\n\r\ninterface ColouredTextProps {\r\n  colour: string;\r\n};\r\n\r\nconst ColouredText = styled.p<ColouredTextProps>`\r\n  color: ${props => props.colour};\r\n  display: inline;\r\n`;\r\n\r\nexport default ColouredText;\r\n","import { HashRouter as Router, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Match from './pages/Match';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <header className=\"App-header\">\n        <Route exact path={'/'} component={Home} />\n        <Route path={'/match/:roomId'} component={Match} />\n      </header>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}